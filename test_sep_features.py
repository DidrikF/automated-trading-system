import pytest
import pandas as pd
import math
from dateutil.relativedelta import *
from packages.helpers.helpers import get_x_past_months_of_data
from sep_features import add_sep_features
from packages.multiprocessing.engine import pandas_mp_engine

"""
Each step is performed for each industry separately

Step-by-Step Dataset Construction:
1. Extend the SEP dataset with information usefull for sampling (most recent 10-K filing date, Industry classifications)
2. Use different sampling techniques to get monthly observations
    1. At first use timebars (sampling at a fixed time interval), but try to respect the different fiscal years
3. Calculate the various price and volume based features
4. Add inn SF1 and DAILY data
5. Compute features based on SF1
6. Select the features you want and combine into one ML ready dataset
"""

sep_prepared = None
sep_sampled = None
sep_featured = None
sf1_art = None

@pytest.fixture(scope='module', autouse=True)
def setup():
    global sep_prepared, sep_sampled, sep_featured, sf1_art

    # Will be executed before the first test in the module
    sep_prepared = pd.read_csv("./datasets/testing/sep_prepared.csv",  parse_dates=["date"], index_col="date")
    sep_sampled = pd.read_csv("./datasets/testing/sep_sampled.csv", parse_dates=["date"], index_col="date")
    sf1_art = pd.read_csv("./datasets/testing/sf1_art.csv", parse_dates=["datekey"], index_col="datekey")

    yield
    # Will be executed after the last test in the module
    sep_featured.sort_values(by=["ticker", "date"], inplace=True)
    sep_featured.to_csv("./datasets/testing/sep_featured.csv")
    # sep_sampled.to_csv("./datasets/testing/sep_sampled.csv")


def test_add_return():
    global sep_prepared
    global sep_sampled
    global sep_featured
    global sf1_art

    print(type(sep_sampled), type(sep_prepared), type(sf1_art))

    sep_featured = pandas_mp_engine(callback=add_sep_features, atoms=sep_sampled, \
        data={'sep': sep_prepared, "sf1_art": sf1_art}, molecule_key='sep_sampled', split_strategy= 'ticker', \
            num_processes=1, molecules_per_process=1)

    sep_featured_aapl = sep_featured.loc[sep_featured.ticker == "AAPL"]
    sep_prepared_aapl = sep_prepared.loc[sep_prepared.ticker == "AAPL"]

    # Date0 : 2001-04-12 (Shifted 30 days)
    # Date0+1m : 2001-05-11
    # Date0+2m : 2001-06-11
    # Date0+3m : 2001-07-11
    # https://planetcalc.com/410/

    assert  sep_featured_aapl.loc["2001-04-12"]["return_1m"] == \
            (sep_prepared_aapl.loc["2001-05-11"]["adj_close"] / sep_prepared_aapl.loc["2001-04-12"]["adj_close"]) - 1
    assert  sep_featured_aapl.loc["2001-04-12"]["return_2m"] == \
            (sep_prepared_aapl.loc["2001-06-11"]["adj_close"] / sep_prepared_aapl.loc["2001-04-12"]["adj_close"]) - 1
    assert  sep_featured_aapl.loc["2001-04-12"]["return_3m"] == \
            (sep_prepared_aapl.loc["2001-07-11"]["adj_close"] / sep_prepared_aapl.loc["2001-04-12"]["adj_close"]) - 1


def test_add_mom1m_mom6m_mom12m_mom24m():
    global sep_prepared
    global sep_sampled
    global sep_featured
    
    sep_featured_aapl = sep_featured.loc[sep_featured.ticker == "AAPL"]
    sep_prepared_aapl = sep_prepared.loc[sep_prepared.ticker == "AAPL"]

    # Date0 : 2001-04-12 (Shifted 30 days)
    # Date0-30d : 2001-03-13 
    # Data0-182d: 2000-10-12 
    assert  sep_featured_aapl.loc["2001-04-12"]["mom6m"] == (sep_prepared_aapl.loc["2001-03-13"]["adj_close"] / sep_prepared_aapl.loc["2000-10-12"]["adj_close"]) - 1

    # The rest are calculated the same way, so testing will be skipped for now.

def test_add_beta():
    global sep_featured
    # AAPL 2000-02-01:
    # Using 2 years of data
    # Cov:  0.003480979859486004, Var: 0.00291186561831057, Beta: 1.1943905852713281

    # AAPL 1999-02-08:
    # Using 1 years of data
    # Cov: 0.0032885050928968835, Var: 0.0028698769711752014, Beta: 1.1458697100699253
    # Confirmed manually.

    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "2000-02-01")]\
            .iloc[0]["beta"] == pytest.approx(1.1943905852713281)

def test_add_betasq():
    global sep_featured
    # AAPL 2000-02-01:
    # Using 2 years of data
    # Cov:  0.003480979859486004, Var: 0.00291186561831057, Beta: 1.1943905852713281
    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "2000-02-01")]\
            .iloc[0]["betasq"] == pytest.approx(1.1943905852713281**2)

def test_add_idiovol():
    global sep_featured
    # 1 Year of apple ending 1999-02-08
    # Confirmed STD of diff between stock and market return = 0.045536866012663164
    # This was in fact the output from the code.

    # 2 Years ending 2000-02-01, has std: 0.05365805443425454
    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "2000-02-01")]\
            .iloc[0]["idiovol"] == pytest.approx(0.05365805443425454)

def test_add_chmom():
    global sep_featured
    # Date0 : 2001-04-12
    # Date0-30d : 2001-03-13 
    # Data0-182d: 2000-10-12 
    # Data0-(182+30)d: 2000-09-12
    # Data0-365d: 2000-04-12

    sep_prepared_aapl = sep_prepared.loc[sep_prepared.ticker == "AAPL"]

    chmom_at_2001_04_12 = (sep_prepared_aapl.loc["2001-03-13"]["adj_close"] / sep_prepared_aapl.loc["2000-10-12"]["adj_close"] - 1) - \
            (sep_prepared_aapl.loc["2000-09-12"]["adj_close"] / sep_prepared_aapl.loc["2000-04-12"]["adj_close"] - 1)

    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "2001-04-12")].iloc[0]["chmom"] == chmom_at_2001_04_12

def test_add_illiquidity():
    global sep_featured
    # AAPL 1999-04-08 has confirmed illiquidity: -1.5139424798827458e-11

    # When volume is zero, (absolute return / dollar volume) becomes NaN, which is the case for several dates in the dataset.
    # When calculation the mean, these values are skipped.
    
    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "1999-04-08")].iloc[0]["ill"] == pytest.approx(-1.5139424798827458e-11)
    
def test_add_dolvol():
    global sep_featured
    # AAPL at 1998-03-09 has confirmed dolvol = 21.807906903155157


    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "1998-03-09")]\
        .iloc[0]["dolvol"] == pytest.approx(21.807906903155157)

def test_add_dy():
    global sep_featured
    # FCX 1999-05-12 has confirmed dy = 1.904597186490487e-11
    assert sep_featured.loc[(sep_featured.ticker == "FCX") & (sep_featured.index == "1999-05-12")]\
        .iloc[0]["dy"] == pytest.approx(1.904597186490487e-11)

def test_add_maxret():
    global sep_featured
    # AAPL at 1998-02-09 has confirmed maxret = 0.04661654135338322
    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "1998-02-09")]\
        .iloc[0]["maxret"] == pytest.approx(0.04661654135338322)
    
def test_add_mve(): # ln of marketcap
    global sep_featured
    # AAPL at 1998-02-09
    sep_aapl_row = sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "1998-02-09")].iloc[0]
    datekey0 = sep_aapl_row["datekey"]
    sf1_art_row = sf1_art.loc[datekey0]
    marketcap = sf1_art_row["sharefactor"]*sf1_art_row["sharesbas"]*sep_aapl_row["close"]

    assert sep_aapl_row["mve"] == math.log(marketcap)

def test_add_retvol():
    global sep_featured
    # AAPL at 1998-02-09 has confirmed retvol = 0.023875469881802412
    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "1998-02-09")]\
        .iloc[0]["retvol"] == pytest.approx(0.023875469881802412)

def test_add_std_dolvol():
    global sep_featured
    test_date = pd.to_datetime("1998-02-09")
    sep_prepared_aapl = sep_prepared[(sep_prepared.ticker == "AAPL")]
    sep_past_month = get_x_past_months_of_data(sep_prepared_aapl, test_date, 1)
    print(sep_past_month)
    mean_price = (sep_past_month["close"]+sep_past_month["open"])/2
    print(mean_price)
    std_dolvol = (mean_price*sep_past_month["volume"]).std() * math.sqrt(22)

    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "1998-02-09")].iloc[0]["std_dolvol"] == \
        std_dolvol

def test_add_std_turn():
    global sep_featured
    # AAPL at 1998-02-09 has confirmed std_turn = 0.07019337356877098
    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "1998-02-09")]\
        .iloc[0]["std_turn"] == pytest.approx(0.07019337356877098) 


def test_add_turn():
    global sep_featured
    # AAPL at 1998-04-09 has confirmed turn = 0.5562349274431175
    assert sep_featured.loc[(sep_featured.ticker == "AAPL") & (sep_featured.index == "1998-04-09")]\
        .iloc[0]["turn"] == pytest.approx(0.5562349274431175) 

def test_add_zerotrade():
    global sep_featured
    # NTK at 2011-05-12 has confirmed zero_trade = 8.639755267801805
    assert sep_featured.loc[(sep_featured.ticker == "NTK") & (sep_featured.index == "2011-05-12")]\
        .iloc[0]["zerotrade"] == pytest.approx(8.639755267801805) 


"""
2011-04-12  100000.0  15000000.0
2011-04-13       0.0  15000000.0
2011-04-14       0.0  15000000.0
2011-04-15       0.0  15000000.0
2011-04-18     100.0  15000000.0
2011-04-19       0.0  15000000.0
2011-04-20    2500.0  15000000.0
2011-04-21    4300.0  15000000.0
2011-04-25       0.0  15000000.0
2011-04-26     800.0  15000000.0
2011-04-27     700.0  15000000.0
2011-04-28       0.0  15000000.0
2011-04-29     300.0  15000000.0
2011-05-02     200.0  15000000.0
2011-05-03    3000.0  15000000.0
2011-05-04   50200.0  15000000.0
2011-05-05  157000.0  15000000.0
2011-05-06       0.0  15000000.0
2011-05-09     300.0  15000000.0
2011-05-10     500.0  15000000.0
2011-05-11       0.0  15000000.0
2011-05-12       0.0  15127972.0

100000.0,     0.0,     0.0,     0.0,   100.0,     0.0,  2500.0,  4300.0,     0.0,   800.0,   700.0,     0.0,   300.0,   200.0,  3000.0, 50200.0,157000.0,     0.0,   300.0,   500.0,     0.0,     0.0,
319900.0

15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15000000.0,15127972.0,
	15005816.909091
"""


"""

1998-03-09    143732400.0
1998-03-10    178225600.0
1998-03-11    303584400.0
1998-03-12    186090800.0
1998-03-13    141540000.0
1998-03-16    100590000.0
1998-03-17    102564000.0
1998-03-18     69249600.0
1998-03-19     40014800.0
1998-03-20     53869200.0
1998-03-23    103684000.0
1998-03-24    168982800.0
1998-03-25     96843600.0
1998-03-26     50741600.0
1998-03-27     63898800.0
1998-03-30     62675200.0
1998-03-31     66724000.0
1998-04-01     46720800.0
1998-04-02     48577200.0
1998-04-03     50766800.0
1998-04-06     86898000.0
1998-04-07     73175200.0
1998-04-08     56299600.0
1998-04-09     42576800.0

143732400.0,178225600.0,303584400.0,186090800.0,141540000.0,100590000.0,102564000.0, 69249600.0, 40014800.0, 53869200.0,103684000.0,168982800.0, 96843600.0, 50741600.0, 63898800.0, 62675200.0, 66724000.0, 46720800.0, 48577200.0, 50766800.0, 86898000.0, 73175200.0, 56299600.0, 42576800.0,
	2338025200.0

Name: volume, dtype: float64
date
1998-02-09    123667600.0
1998-02-10    105504000.0
1998-02-11     52917200.0
1998-02-12     50937600.0
1998-02-13     51998800.0
1998-02-17     45687600.0
1998-02-18    123648000.0
1998-02-19     99915200.0
1998-02-20     81354000.0
1998-02-23    119372400.0
1998-02-24    114147600.0
1998-02-25    178166800.0
1998-02-26    148783600.0
1998-02-27    129900400.0
1998-03-02    100111200.0
1998-03-03     83518400.0
1998-03-04    204456000.0
1998-03-05    168781200.0
1998-03-06    166616800.0
1998-03-09    143732400.0

123667600.0, 105504000.0,  52917200.0,  50937600.0,  51998800.0,  45687600.0, 123648000.0,  99915200.0,  81354000.0, 119372400.0, 114147600.0, 178166800.0, 148783600.0, 129900400.0, 100111200.0,  83518400.0, 204456000.0, 168781200.0, 166616800.0, 143732400.0,
2293216800.0


Name: volume, dtype: float64
date
1998-01-09    221636800.0
1998-01-12    129099600.0
1998-01-13    159213600.0
1998-01-14    147316400.0
1998-01-15    139818000.0
1998-01-16     61588800.0
1998-01-20     60390400.0
1998-01-21     47552400.0
1998-01-22     82432000.0
1998-01-23     58290400.0
1998-01-26     36610000.0
1998-01-27     28058800.0
1998-01-28     37780400.0
1998-01-29     52970400.0
1998-01-30     40611200.0
1998-02-02    159185600.0
1998-02-03    100654400.0
1998-02-04     42548800.0
1998-02-05     59567200.0
1998-02-06     50584800.0
1998-02-09    123667600.0

  221636800.0,  129099600.0,  159213600.0,  147316400.0,  139818000.0,   61588800.0,   60390400.0,   47552400.0,   82432000.0,   58290400.0,   36610000.0,   28058800.0,   37780400.0,   52970400.0,   40611200.0,  159185600.0,  100654400.0,   42548800.0,   59567200.0,   50584800.0,  123667600.0,
	1839577600.0
"""


"""
AAPL 1998-02-09 00:00:00
date
1998-01-09    0.061844
1998-01-12    0.036023
1998-01-13    0.044426
1998-01-14    0.041106
1998-01-15    0.039014
1998-01-16    0.017185
1998-01-20    0.016851
1998-01-21    0.013269
1998-01-22    0.023001
1998-01-23    0.016265
1998-01-26    0.010215
1998-01-27    0.007829
1998-01-28    0.010542
1998-01-29    0.014780
1998-01-30    0.011332
1998-02-02    0.044418
1998-02-03    0.028086
1998-02-04    0.011872
1998-02-05    0.016621
1998-02-06    0.014115
1998-02-09    0.033266

0.061844,0.036023,0.044426,0.041106,0.039014,0.017185,0.016851,0.013269,0.023001,0.016265,0.010215,0.007829,0.010542,0.014780,0.011332,0.044418,0.028086,0.011872,0.016621,0.014115,0.033266,
dtype: float64
0.07019337356877098
"""


"""
AAPL 1998-02-09 00:00:00
date
1998-01-09    0.004637
1998-01-12    0.046549
1998-01-13    0.046617
1998-01-14   -0.007042
1998-01-15    0.000000
1998-01-16   -0.031700
1998-01-20    0.000000
1998-01-21    0.007463
1998-01-22    0.031484
1998-01-23    0.005780
1998-01-26    0.000000
1998-01-27   -0.002920
1998-01-28    0.000000
1998-01-29   -0.022189
1998-01-30    0.000000
1998-02-02   -0.043873
1998-02-03    0.034810
1998-02-04    0.010853
1998-02-05    0.003067
1998-02-06    0.007622
1998-02-09    0.044207
dtype: float64
0.023875469881802412

 0.004637, 0.046549, 0.046617,-0.007042, 0.000000,-0.031700, 0.000000, 0.007463, 0.031484, 0.005780, 0.000000,-0.002920, 0.000000,-0.022189, 0.000000,-0.043873, 0.034810, 0.010853, 0.003067, 0.007622, 0.044207,"""

"""
FCX 1999-05-12 00:00:00
date
1998-05-12    0.000
1998-05-13    0.000
1998-05-14    0.000
1998-05-15    0.000
1998-05-18    0.000
1998-05-19    0.000
1998-05-20    0.000
1998-05-21    0.000
1998-05-22    0.000
1998-05-26    0.000
1998-05-27    0.000
1998-05-28    0.000
1998-05-29    0.000
1998-06-01    0.000
1998-06-02    0.000
1998-06-03    0.000
1998-06-04    0.000
1998-06-05    0.000
1998-06-08    0.000
1998-06-09    0.000
1998-06-10    0.000
1998-06-11    0.000
1998-06-12    0.000
1998-06-15    0.000
1998-06-16    0.000
1998-06-17    0.000
1998-06-18    0.000
1998-06-19    0.000
1998-06-22    0.000
1998-06-23    0.000
1998-06-24    0.000
1998-06-25    0.000
1998-06-26    0.000
1998-06-29    0.000
1998-06-30    0.000
1998-07-01    0.000
1998-07-02    0.000
1998-07-06    0.000
1998-07-07    0.000
1998-07-08    0.000
1998-07-09    0.000
1998-07-10    0.000
1998-07-13    0.000
1998-07-14    0.025
1998-07-15    0.000
1998-07-16    0.000
1998-07-17    0.000
1998-07-20    0.000
1998-07-21    0.000
1998-07-22    0.000
1998-07-23    0.000
1998-07-24    0.000
1998-07-27    0.000
1998-07-28    0.000
1998-07-29    0.000
1998-07-30    0.000
1998-07-31    0.000
1998-08-03    0.000
1998-08-04    0.000
1998-08-05    0.000
1998-08-06    0.000
1998-08-07    0.000
1998-08-10    0.000
1998-08-11    0.000
1998-08-12    0.000
1998-08-13    0.000
1998-08-14    0.000
1998-08-17    0.000
1998-08-18    0.000
1998-08-19    0.000
1998-08-20    0.000
1998-08-21    0.000
1998-08-24    0.000
1998-08-25    0.000
1998-08-26    0.000
1998-08-27    0.000
1998-08-28    0.000
1998-08-31    0.000
1998-09-01    0.000
1998-09-02    0.000
1998-09-03    0.000
1998-09-04    0.000
1998-09-08    0.000
1998-09-09    0.000
1998-09-10    0.000
1998-09-11    0.000
1998-09-14    0.000
1998-09-15    0.000
1998-09-16    0.000
1998-09-17    0.000
1998-09-18    0.000
1998-09-21    0.000
1998-09-22    0.000
1998-09-23    0.000
1998-09-24    0.000
1998-09-25    0.000
1998-09-28    0.000
1998-09-29    0.000
1998-09-30    0.000
1998-10-01    0.000
1998-10-02    0.000
1998-10-05    0.000
1998-10-06    0.000
1998-10-07    0.000
1998-10-08    0.000
1998-10-09    0.000
1998-10-12    0.000
1998-10-13    0.000
1998-10-14    0.025
1998-10-15    0.000
1998-10-16    0.000
1998-10-19    0.000
1998-10-20    0.000
1998-10-21    0.000
1998-10-22    0.000
1998-10-23    0.000
1998-10-26    0.000
1998-10-27    0.000
1998-10-28    0.000
1998-10-29    0.000
1998-10-30    0.000
1998-11-02    0.000
1998-11-03    0.000
1998-11-04    0.000
1998-11-05    0.000
1998-11-06    0.000
1998-11-09    0.000
1998-11-10    0.000
1998-11-11    0.000
1998-11-12    0.000
1998-11-13    0.000
1998-11-16    0.000
1998-11-17    0.000
1998-11-18    0.000
1998-11-19    0.000
1998-11-20    0.000
1998-11-23    0.000
1998-11-24    0.000
1998-11-25    0.000
1998-11-27    0.000
1998-11-30    0.000
1998-12-01    0.000
1998-12-02    0.000
1998-12-03    0.000
1998-12-04    0.000
1998-12-07    0.000
1998-12-08    0.000
1998-12-09    0.000
1998-12-10    0.000
1998-12-11    0.000
1998-12-14    0.000
1998-12-15    0.000
1998-12-16    0.000
1998-12-17    0.000
1998-12-18    0.000
1998-12-21    0.000
1998-12-22    0.000
1998-12-23    0.000
1998-12-24    0.000
1998-12-28    0.000
1998-12-29    0.000
1998-12-30    0.000
1998-12-31    0.000
1999-01-04    0.000
1999-01-05    0.000
1999-01-06    0.000
1999-01-07    0.000
1999-01-08    0.000
1999-01-11    0.000
1999-01-12    0.000
1999-01-13    0.000
1999-01-14    0.000
1999-01-15    0.000
1999-01-19    0.000
1999-01-20    0.000
1999-01-21    0.000
1999-01-22    0.000
1999-01-25    0.000
1999-01-26    0.000
1999-01-27    0.000
1999-01-28    0.000
1999-01-29    0.000
1999-02-01    0.000
1999-02-02    0.000
1999-02-03    0.000
1999-02-04    0.000
1999-02-05    0.000
1999-02-08    0.000
1999-02-09    0.000
1999-02-10    0.000
1999-02-11    0.000
1999-02-12    0.000
1999-02-16    0.000
1999-02-17    0.000
1999-02-18    0.000
1999-02-19    0.000
1999-02-22    0.000
1999-02-23    0.000
1999-02-24    0.000
1999-02-25    0.000
1999-02-26    0.000
1999-03-01    0.000
1999-03-02    0.000
1999-03-03    0.000
1999-03-04    0.000
1999-03-05    0.000
1999-03-08    0.000
1999-03-09    0.000
1999-03-10    0.000
1999-03-11    0.000
1999-03-12    0.000
1999-03-15    0.000
1999-03-16    0.000
1999-03-17    0.000
1999-03-18    0.000
1999-03-19    0.000
1999-03-22    0.000
1999-03-23    0.000
1999-03-24    0.000
1999-03-25    0.000
1999-03-26    0.000
1999-03-29    0.000
1999-03-30    0.000
1999-03-31    0.000
1999-04-01    0.000
1999-04-05    0.000
1999-04-06    0.000
1999-04-07    0.000
1999-04-08    0.000
1999-04-09    0.000
1999-04-12    0.000
1999-04-13    0.000
1999-04-14    0.000
1999-04-15    0.000
1999-04-16    0.000
1999-04-19    0.000
1999-04-20    0.000
1999-04-21    0.000
1999-04-22    0.000
1999-04-23    0.000
1999-04-26    0.000
1999-04-27    0.000
1999-04-28    0.000
1999-04-29    0.000
1999-04-30    0.000
1999-05-03    0.000
1999-05-04    0.000
1999-05-05    0.000
1999-05-06    0.000
1999-05-07    0.000
1999-05-10    0.000
1999-05-11    0.000
1999-05-12    0.000
Name: dividends, dtype: float64
326927400.0 1.0 8.03 2625227022.0
1.904597186490487e-11

"""



"""
1998-02-09       NaN               NaN       NaN
1998-02-16  0.061162          0.061162  0.000000
1998-02-23  0.010086          0.010086  0.000000
1998-03-02  0.085592          0.085592  0.000000
1998-03-09  0.085414          0.085414  0.000000
1998-03-16  0.039952          0.039952  0.000000
1998-03-23  0.095460          0.095460  0.000000
1998-03-30  0.062699          0.062699  0.000000
1998-04-06 -0.018000         -0.018000  0.000000
1998-04-13 -0.072301         -0.022109 -0.050193
1998-04-20  0.055982          0.032625  0.023357
1998-04-27  0.076923          0.018887  0.058036
1998-05-04 -0.071429         -0.051559 -0.019869
1998-05-11  0.101871          0.018468  0.083403
1998-05-18  0.015094         -0.025508  0.040603
1998-05-25 -0.025093         -0.030988  0.005895
1998-06-01 -0.091516         -0.043905 -0.047611
1998-06-08  0.007345          0.001826  0.005519
1998-06-15  0.051042          0.052389 -0.001348
1998-06-22 -0.008920         -0.033768  0.024848
1998-06-29 -0.007000         -0.036501  0.029501
1998-07-06  0.032226          0.022446  0.009779
1998-07-13  0.062439          0.047678  0.014761
1998-07-20  0.096419          0.042155  0.054264
1998-07-27  0.065327          0.052986  0.012341
1998-08-03 -0.055818         -0.047438 -0.008380
1998-08-10  0.016653         -0.027803  0.044455
1998-08-17  0.140868          0.057221  0.083647
1998-08-24  0.091170          0.014514  0.076656
1998-08-31 -0.040789         -0.032581 -0.008209
1998-09-07 -0.163923         -0.125677 -0.038246
1998-09-14  0.120591          0.135146 -0.014555
1998-09-21 -0.001464         -0.030866  0.029402
1998-09-28 -0.031525         -0.038328  0.006803
1998-10-05  0.068130          0.034065  0.034065
1998-10-12 -0.175762         -0.098246 -0.077516
1998-10-19  0.190026          0.073844  0.116181
1998-10-26 -0.069364          0.023673 -0.093038
1998-11-02 -0.022516         -0.036198  0.013683
1998-11-09  0.072280          0.036140  0.036140
1998-11-16 -0.070370          0.056065 -0.126435
1998-11-23 -0.009562         -0.026980  0.017418
1998-11-30  0.032985          0.028292  0.004693
1998-12-07 -0.050623         -0.054850  0.004227
1998-12-14 -0.060705         -0.073232  0.012526
1998-12-21  0.047162         -0.023739  0.070901
1998-12-28  0.131776          0.034436  0.097341
1999-01-04  0.074429          0.074233  0.000196
1999-01-11  0.061043          0.067746 -0.006703
1999-01-18  0.064641          0.005375  0.059267
1999-01-25 -0.113540         -0.048180 -0.065359
1999-02-01 -0.009589         -0.051906  0.042317
1999-02-08 -0.031812         -0.031313 -0.000499
cov:  0.0032885050928968835 var:  0.0028698769711752014 beta:  1.1458697100699253
std diff:  0.045536866012663164
"""

# 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000, 0.000000,-0.050193, 0.023357, 0.058036,-0.019869, 0.083403, 0.040603, 0.005895,-0.047611, 0.005519,-0.001348, 0.024848, 0.029501, 0.009779, 0.014761, 0.054264, 0.012341,-0.008380, 0.044455, 0.083647, 0.076656,-0.008209,-0.038246,-0.014555, 0.029402, 0.006803, 0.034065,-0.077516, 0.116181,-0.093038, 0.013683, 0.036140,-0.126435, 0.017418, 0.004693, 0.004227, 0.012526, 0.070901, 0.097341, 0.000196,-0.006703, 0.059267,-0.065359, 0.042317,-0.000499,


"""
NaN , NaN
 0.061162, 0.010086, 0.085592, 0.085414, 0.039952, 0.095460, 0.062699,-0.018000,-0.072301, 0.055982, 0.076923,-0.071429, 0.101871, 0.015094,-0.025093,-0.091516, 0.007345, 0.051042,-0.008920,-0.007000, 0.032226, 0.062439, 0.096419, 0.065327,-0.055818, 0.016653, 0.140868, 0.091170,-0.040789,-0.163923, 0.120591,-0.001464,-0.031525, 0.068130,-0.175762, 0.190026,-0.069364,-0.022516, 0.072280,-0.070370,-0.009562, 0.032985,-0.050623,-0.060705, 0.047162, 0.131776, 0.074429, 0.061043, 0.064641,-0.113540,-0.009589,-0.031812,
  0.061162, 0.010086, 0.085592, 0.085414, 0.039952, 0.095460, 0.062699,-0.018000,-0.022109, 0.032625, 0.018887,-0.051559, 0.018468,-0.025508,-0.030988,-0.043905, 0.001826, 0.052389,-0.033768,-0.036501, 0.022446, 0.047678, 0.042155, 0.052986,-0.047438,-0.027803, 0.057221, 0.014514,-0.032581,-0.125677, 0.135146,-0.030866,-0.038328, 0.034065,-0.098246, 0.073844, 0.023673,-0.036198, 0.036140, 0.056065,-0.026980, 0.028292,-0.054850,-0.073232,-0.023739, 0.034436, 0.074233, 0.067746, 0.005375,-0.048180,-0.051906,-0.031313
  
  """


"""

def test_add_sep_features():

    global sep_prepared
    global sep_sampled
    global sep_featured

    sep_featured = add_sep_features(testing_index_filename_tuple, True)

    # Test return calculation
    # AAPL
    date_1999_01_04 = pd.to_datetime("1999-01-04") # Close: 1.473
    # date_1999_02_04 = pd.to_datetime("1999-02-04") # Close: 1.3530000000000002
    date_2002_12_19 = pd.to_datetime("2002-12-19") # Cannot calculate return

    assert sep_featured.loc[(sep_featured["ticker"] == "AAPL") & (sep_featured["date"] == date_1999_01_04)].iloc[-1]["return"] == pytest.approx((1.3530000000000002 / 1.473) -1)
    assert pd.isnull(sep_featured.loc[(sep_featured["ticker"] == "AAPL") & (sep_featured["date"] == date_2002_12_19)].iloc[-1]["return"])
    
    # NTK
    date_2011_06_13 = pd.to_datetime("2011-06-13") # Close: 38.88
    # date_2011_07_13 = pd.to_datetime("2011-07-13") # Close: 34.25
    assert sep_featured.loc[(sep_featured["ticker"] == "NTK") & (sep_featured["date"] == date_2011_06_13)].iloc[0]["return"] == pytest.approx((34.25 / 38.88) - 1)

    
    # Test momentum calculation (only for 6 and 12 months because the code is so similar)
    # AAPL
    date_1999_12_22 = pd.to_datetime("1999-12-22") # Close:  3.569
    # date_1999_06_22 = pd.to_datetime("1999-06-22") # Close: 1.621
    
    date_2002_06_14 = pd.to_datetime("2002-06-14") # Close: 1.436
    # date_2001_06_14 = pd.to_datetime("2001-06-14") # Close: 1.42

    assert sep_featured.loc[(sep_featured["ticker"] == "AAPL") & (sep_featured["date"] == date_1999_12_22)].iloc[-1]["mom6m"] == pytest.approx((3.569 / 1.621) -1)
    assert sep_featured.loc[(sep_featured["ticker"] == "AAPL") & (sep_featured["date"] == date_2002_06_14)].iloc[-1]["mom12m"] == pytest.approx((1.436 / 1.42) -1) 


    # Test beta calculation

    # assert False


# Determine if ANY Value in a Series is Missing
# s.isnull().values.any()

"""
"""
-1.974678e-10, 5.799431e-10, 4.730903e-10, 2.721020e-10, 6.817114e-11,-4.634752e-11,-1.443935e-10, 3.874896e-10,-2.135496e-11,-6.123262e-10, 7.850512e-11, 1.318086e-10, 3.781619e-10,-5.716472e-10, 4.556100e-11, 0.000000e+00, 4.019385e-10, 4.596458e-11, 1.301084e-10, 6.220292e-11,-7.948828e-11, 1.654626e-10, 9.878912e-12,-1.968762e-10, 1.425173e-10,-2.309224e-10,-2.309275e-10,-4.921761e-10, 2.552620e-10,-3.761609e-11,-6.927687e-10,-4.624222e-10,-6.418464e-10, 4.783761e-10, 3.625886e-10,-6.028501e-10,-1.123247e-10, 3.971813e-10,-8.641095e-10, 1.975557e-10, 0.000000e+00, 3.045081e-10, 4.628166e-10, 3.486452e-11,-3.087454e-10, 3.278437e-10, 2.769643e-10, 3.449551e-10, 8.531115e-11,-5.474988e-10,-3.670701e-10, 4.445800e-10, 2.327893e-10, 2.653585e-10, 0.000000e+00,-3.841815e-10, 3.752965e-10, 8.753150e-11, 4.469991e-10,-2.898858e-10, 4.059855e-10, 5.618158e-11, 2.245459e-10,-2.288847e-10,-5.009804e-11, 2.957322e-10,-9.002496e-11, 1.240377e-10,-1.200539e-11,-4.692412e-11,-6.748247e-11,-1.322309e-10, 1.828215e-11, 5.103516e-11,-2.330205e-10, 8.713175e-11,-1.811591e-10, 3.013917e-10, 1.670974e-10,-9.318448e-10, 2.799292e-10,-4.053332e-10, 4.754232e-10, 3.685972e-10,-1.843192e-10, 2.760902e-10, 5.537585e-11, 3.151302e-11,-8.608647e-11,-2.949252e-11, 6.738303e-11, 1.147386e-11,-3.158890e-10,-6.218054e-11, 2.483846e-10,-2.237786e-10,-2.009100e-10, 8.680314e-11,-1.177046e-10,-2.667917e-10,-4.004048e-10, 3.478721e-10, 5.897673e-12,-8.164441e-11,-8.616726e-11, 4.837478e-11,-1.478536e-10, 2.956585e-10,-1.882981e-10,-3.343503e-10, 2.676732e-10,-3.879411e-10,-1.792135e-11, 1.956882e-10, 3.597170e-10,-4.418253e-11, 2.942460e-10, 9.875620e-11, 1.869833e-10,-1.234129e-10, 1.071665e-10,-2.770036e-10,-2.416514e-10,-8.423095e-11,-3.232653e-10,-2.811636e-10,-9.547151e-11,-3.325705e-11, 5.347069e-10,-7.168619e-12, 5.697771e-11,-7.623612e-11, 3.669973e-11,-5.949061e-11, 1.405181e-10,-3.917102e-10, 6.970075e-11,-2.910962e-11,-2.984167e-10, 2.436560e-10,-4.103552e-10, 3.800931e-10, 0.000000e+00, 7.977172e-11, 4.387520e-11, 9.037008e-11, 1.676855e-11,-2.459914e-11, 1.640630e-11,-1.287849e-10,-1.017552e-10,-2.080670e-10, 1.469631e-10, 8.663568e-11, 1.260933e-11,-4.011024e-10, 6.886724e-11, 6.438536e-11,-2.404789e-10, 1.062297e-10,-4.520995e-11,-2.107547e-10, 0.000000e+00,-4.521187e-10, 2.601304e-10, 1.823729e-10,-3.704515e-10,-2.078994e-10, 6.424139e-11,-2.758825e-10,-1.201226e-10,-1.820390e-10, 2.263110e-10,-7.565782e-11, 3.162011e-10,-2.462132e-10, 1.562742e-10, 2.250564e-10,-8.445019e-11, 1.168640e-10, 7.035788e-11,-2.186897e-10, 1.859461e-10,-5.283629e-11,-1.642443e-11, 1.120403e-10,-5.994299e-11, 6.094427e-11,-1.043195e-10, 1.166786e-10,-1.213600e-10, 1.333272e-11,-1.249694e-11, 2.031001e-10,-1.352915e-10,-3.230264e-11,-1.282624e-10,-4.089967e-11,-1.890863e-10, 2.392672e-10, 2.109431e-11, 6.975788e-11,-1.602236e-10, 0.000000e+00, 0.000000e+00,-1.762464e-10,-2.669226e-10, 2.517892e-10,-3.535464e-10,-1.952466e-10, 1.864621e-10,-8.473847e-11, 2.047090e-10, 1.132695e-10,-2.482435e-10,-1.461236e-10,-3.031762e-10,-2.497161e-10, 2.148800e-10, 2.815474e-10,-2.622925e-11,-4.881969e-10,-1.197359e-10,-2.202034e-10,-2.047977e-10, 7.041661e-11,-1.785145e-10,-2.769403e-10,-2.315884e-10, 2.024626e-10,-5.015002e-11,-2.917970e-10,-1.273785e-11, 3.385387e-10, 2.062903e-10, 1.144255e-10,-4.626314e-10, 4.597568e-10,-4.120826e-10, 1.710644e-10,-3.313532e-10, 1.055744e-10,-1.337286e-10,-1.858038e-10, 3.250269e-10, 1.413611e-10,-8.467850e-11, 0.000000e+00, 1.964950e-10, 1.521284e-10,-1.756873e-10, 0.000000e+00,
"""

"""

144063920.0, 84172939.2,110812665.6,103858062.0, 95775330.0, 41387673.6, 41125862.4, 32097870.0, 56713216.0, 40570118.4, 25407340.0, 19164160.4, 25879574.0, 35013434.4, 26559724.8,100605299.2, 65827977.6, 27741817.6, 38956948.8, 33436552.8, 84712306.0, 73219776.0, 35930778.8, 35248819.2, 36191164.8, 32027007.6, 90757632.0, 72938096.0, 58086756.0, 90603651.6, 86866323.6,141998939.6,124829440.4,109635937.6, 81390405.6, 68986198.4,178490088.0,144983050.8,145456466.4,116854441.2,
"""